{"version":3,"file":"static/js/967.9e319a5f.chunk.js","mappings":"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","sources":["components/apiTools/Api.js","components/cast/cast.styled.js","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '129ca5a87012be791cb78f7f53b5aff0';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n","import styled from '@emotion/styled';\n\nexport const MainActor = styled.main`\n  margin-top: 10px;\n`;\n\nexport const ActorCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'components/apiTools/Api';\nimport { ActorCards, MainActor } from './cast.styled';\n\nexport const Cast = () => {\n  const { Id } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    try {\n      const cast = fetchCast(Id);\n\n      cast.then(data => {\n        return setCast(data);\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }, [Id]);\n\n  function setProfile(profile_path) {\n    if (profile_path === null || profile_path === undefined) {\n      return 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg';\n    }\n\n    return `https://www.themoviedb.org/t/p/w500${profile_path}`;\n  }\n\n  return (\n    <MainActor>\n      <ActorCards>\n        {cast\n          ? cast.map(({ name, character, profile_path, id, original_name }) => {\n              return (\n                <li key={id}>\n                  <img src={setProfile(profile_path)} alt=\"actor\" width=\"100\" />\n                  <p>{name || original_name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })\n          : 'N/A'}\n      </ActorCards>\n    </MainActor>\n  );\n};\n"],"names":["URL","API_KEY","BASE_URL","URL_CAST","fetchTrending","_fetchTrending","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","config","response","data","_context","prev","next","method","url","params","api_key","axios","sent","results","abrupt","stop","fetchCast","_x","_fetchCast","_callee3","Id","_context3","concat","cast","fetchReviews","_x2","_fetchReviews","_callee4","_context4","fetchSearchFilm","_x3","_fetchSearchFilm","_callee5","quary","_context5","ApiMovieInfo","_x4","_ApiMovieInfo","_callee6","_context6","MainActor","styled","_templateObject","_taggedTemplateLiteral","ActorCards","_templateObject2","Cast","useParams","_useState","useState","_useState2","_slicedToArray","setCast","setProfile","profile_path","undefined","useEffect","then","error","console","warn","_jsx","children","map","_ref","name","character","id","original_name","_jsxs","src","alt","width"],"sourceRoot":""}