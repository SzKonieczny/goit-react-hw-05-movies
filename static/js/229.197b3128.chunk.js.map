{"version":3,"file":"static/js/229.197b3128.chunk.js","mappings":"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","sources":["components/apiTools/Api.js","components/movieList/movieList.styled.js","components/movieList/MovieList.jsx","pages/home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '129ca5a87012be791cb78f7f53b5aff0';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_GENRES = 'https://api.themoviedb.org/3/genre/movie/list';\nconst URL_CAST = 'https://api.themoviedb.org/3/movie/';\n\nexport default async function fetchTrending() {\n  const config = {\n    method: 'get',\n    url: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios(config);\n\n  const data = response.data.results;\n  return data;\n}\n\nexport async function fetchGenres() {\n  const url = `${URL_GENRES}&language=en-US&api_key=${API_KEY}`;\n\n  const response = await axios(url);\n\n  const data = response.data.genres;\n  return data;\n}\n\nexport async function fetchCast(Id) {\n  const url = `${URL_CAST}${Id}/credits?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data.cast;\n  return data;\n}\n\nexport async function fetchReviews(Id) {\n  const url = `${URL_CAST}${Id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\nexport async function fetchSearchFilm(quary) {\n  const url = `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${quary}&page=1&include_adult=false`;\n\n  const response = await axios(url);\n\n  const data = response.data.results;\n  return data;\n}\n\nexport async function ApiMovieInfo(Id) {\n  const url = `${URL}movie/${Id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios(url);\n\n  const data = response.data;\n  return data;\n}\n","import styled from '@emotion/styled';\n\nexport const FilmName = styled.p`\n  margin: 0;\n  padding: 2px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const FilmCards = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 40px;\n  //margin-top: 10px;\n  // margin-bottom: 0;\n  // padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmItem = styled.li`\n  transition: all 0.2s ease-in-out;\n\n  :hover,\n  :focus {\n    transform: scale(1.03);\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmCards, FilmItem, FilmName } from './movieList.styled';\n\nexport const HomeList = ({ trendFilms }) => {\n  const location = useLocation();\n  if (!trendFilms) {\n    return;\n  }\n  return (\n    <div>\n      <FilmCards>\n        {trendFilms.map(\n          ({ original_name, original_title, id, poster_path }) => {\n            return (\n              <FilmItem key={id} id={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://www.themoviedb.org/t/p/w500${poster_path}`\n                        : 'https://i.pinimg.com/originals/74/3d/b2/743db230d891b47c1d8c66b161111b91.jpg'\n                    }\n                    alt=\"Poster film\"\n                    title={original_name || original_title}\n                    width=\"240\"\n                  />\n                  <FilmName>{original_name || original_title}</FilmName>\n                </Link>\n              </FilmItem>\n            );\n          }\n        )}\n      </FilmCards>\n    </div>\n  );\n};\n","import { HomeList } from 'components/movieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport fetchTrending from 'components/apiTools/Api';\n// import { TrendingTitle } from './home.styled';\n\nexport const Home = () => {\n  const [trendFilms, setTrendFilms] = useState();\n\n  useEffect(() => {\n    try {\n      const films = fetchTrending();\n\n      films.then(data => {\n        return setTrendFilms(data);\n      });\n    } catch (error) {\n      toast.error({ error });\n    }\n  }, []);\n\n  return (\n    <main>\n      {/* <TrendingTitle>Trending Today</TrendingTitle> */}\n      <HomeList trendFilms={trendFilms} />\n    </main>\n  );\n};\n"],"names":["URL","API_KEY","BASE_URL","URL_CAST","fetchTrending","_fetchTrending","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","config","response","data","_context","prev","next","method","url","params","api_key","axios","sent","results","abrupt","stop","fetchCast","_x","_fetchCast","_callee3","Id","_context3","concat","cast","fetchReviews","_x2","_fetchReviews","_callee4","_context4","fetchSearchFilm","_x3","_fetchSearchFilm","_callee5","quary","_context5","ApiMovieInfo","_x4","_ApiMovieInfo","_callee6","_context6","FilmName","styled","_templateObject","_taggedTemplateLiteral","FilmCards","_templateObject2","FilmItem","_templateObject3","HomeList","_ref","trendFilms","location","useLocation","_jsx","children","map","_ref2","original_name","original_title","id","poster_path","_jsxs","Link","to","state","from","src","alt","title","width","Home","_useState","useState","_useState2","_slicedToArray","setTrendFilms","useEffect","then","error","toast"],"sourceRoot":""}